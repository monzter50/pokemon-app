{"version":3,"sources":["redux/reducers/pokemon.js","redux/reducers/pokemons.js","redux/reducers/findPokemon.js","redux/reducers/index.js","redux/store/index.js","routes.js","serviceWorker.js","index.js","redux/actions/index.js"],"names":["initinialState","details","evolution","chain","loading","error","selectPokemonReducer","state","action","newDetails","newChain","type","FETCH_SELECT_POKEMON_PENDING","FECHT_CHAIN","payload","name","FECHT_EVOLUTION","FETCH_SELECT_POKEMON_SUCCESS","FETCH_SELECT_POKEMON_ERROR","pokemons","pokemonsReducers","FETCH_POKEMONS_PENDING","FETCH_POKEMONS_SUCCESS","FETCH_POKEMONS_ERROR","findPokemon","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__COMPOSE","compose","store","createStore","reducers","stats","progress","card_loading","message","card_error","applyMiddleware","thunk","Home","lazy","Details","PublicRoutes","history","fallback","from","to","exact","strict","path","component","Boolean","location","hostname","match","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","fetchSelectPokemonError","fetchSelectPokemonPending","fecthPokemons","dispatch","a","fetch","process","response","json","data","results","fecthPokemon","fecthSpecies","evolution_chain","habitat","fecthEvolution","id","text"],"mappings":"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","file":"static/js/main.210a5559.chunk.js","sourcesContent":["import {\r\n  FETCH_SELECT_POKEMON_ERROR,\r\n  FETCH_SELECT_POKEMON_SUCCESS,\r\n  FETCH_SELECT_POKEMON_PENDING,\r\n  FECHT_CHAIN,\r\n  FECHT_EVOLUTION,\r\n} from '../actions';\r\n\r\nconst initinialState = {\r\n  details: {},\r\n  evolution: {},\r\n  chain: {},\r\n  loading: false,\r\n  error: false,\r\n};\r\nconst selectPokemonReducer = (state = initinialState, action) => {\r\n  const newDetails = { ...state.details };\r\n  const newChain = { ...state.chain };\r\n  switch (action.type) {\r\n  case FETCH_SELECT_POKEMON_PENDING:\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n    };\r\n  case FECHT_CHAIN:\r\n    newChain[action.payload.name] = action.payload;\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      chain: newChain,\r\n    };\r\n  case FECHT_EVOLUTION:\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      evolution: action.payload,\r\n    };\r\n  case FETCH_SELECT_POKEMON_SUCCESS:\r\n    newDetails[action.payload.name] = action.payload;\r\n    return {\r\n      ...state,\r\n      details: newDetails,\r\n    };\r\n  case FETCH_SELECT_POKEMON_ERROR:\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      error: action.error,\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\nexport default selectPokemonReducer;\r\n","import {\r\n  FETCH_POKEMONS_PENDING,\r\n  FETCH_POKEMONS_SUCCESS,\r\n  FETCH_POKEMONS_ERROR,\r\n} from '../actions';\r\n\r\nconst initinialState = {\r\n  pokemons: [],\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nconst pokemonsReducers = (state = initinialState, action) => {\r\n  switch (action.type) {\r\n  case FETCH_POKEMONS_PENDING:\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n    };\r\n  case FETCH_POKEMONS_SUCCESS:\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      pokemons: action.payload,\r\n    };\r\n  case FETCH_POKEMONS_ERROR:\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      error: action.error,\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\nexport default pokemonsReducers;\r\n","const initinialState = {\r\n  pokemons: [],\r\n  loading: false,\r\n  error: false,\r\n};\r\nconst findPokemon = (state = initinialState, action) => {\r\n  switch (action.type) {\r\n  default:\r\n    return state;\r\n  }\r\n};\r\nexport default findPokemon;\r\n","import { combineReducers } from 'redux';\r\nimport selectPokemonReducer from './pokemon';\r\nimport pokemonsReducers from './pokemons';\r\nimport findPokemon from './findPokemon';\r\n\r\nconst rootReducer = combineReducers({\r\n  selectPokemonReducer,\r\n  pokemonsReducers,\r\n  findPokemon,\r\n});\r\nexport default rootReducer;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable no-underscore-dangle */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers';\r\n\r\nconst initinialState = {\r\n  pokemons: [],\r\n  stats: [],\r\n  progress: {\r\n    loading: false,\r\n    card_loading: false,\r\n  },\r\n  message: {\r\n    error: false,\r\n    card_error: false,\r\n  },\r\n};\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__COMPOSE || compose;\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initinialState,\r\n  composeEnhancer(applyMiddleware(thunk)),\r\n);\r\nexport default store;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nconst Home = lazy(() => import('./container/PokeContainer'));\r\nconst Details = lazy(() => import('./container/Details'));\r\nconst PublicRoutes = (history) => (\r\n  <Router history={history}>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Switch>\r\n        <Redirect from=\"/details/:id\" to=\"/\" />\r\n        <Route exact strict path=\"/details/\" component={Details} />\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Switch>\r\n    </Suspense>\r\n  </Router>\r\n);\r\n\r\nexport default PublicRoutes;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-mixed-spaces-and-tabs */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-undef */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport store from './redux/store';\nimport PublicRoutes from './routes';\n\nimport './scss/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PublicRoutes history={history} />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable camelcase */\r\n/* eslint-disable no-undef */\r\nexport const FETCH_POKEMONS_PENDING = 'FETCH_POKEMONS_PENDING';\r\nexport const FETCH_POKEMONS_SUCCESS = 'FETCH_POKEMONS_SUCCESS';\r\nexport const FETCH_POKEMONS_ERROR = 'FETCH_POKEMONS_ERROR';\r\nexport const FETCH_SELECT_POKEMON_PENDING = 'FETCH_SELECT_POKEMON_PENDING';\r\nexport const FETCH_SELECT_POKEMON_ERROR = 'FETCH_SELECT_POKEMON_ERROR';\r\nexport const FETCH_SELECT_POKEMON_SUCCESS = 'FETCH_SELECT_POKEMON_SUCCESS';\r\n\r\nexport const FETCH_PENDING = 'FETCH_PENDING';\r\nexport const FETCH_ERROR = 'FETCH_ERROR';\r\nexport const FECHT_CHAIN = 'FECHT_CHAIN';\r\nexport const FECHT_EVOLUTION = 'FECHT_EVOLUTION';\r\n\r\nexport const SEARCH_POKEMON = 'SEARCH_POKEMON';\r\nconst searchPokemon = (payload) => ({ type: SEARCH_POKEMON, payload });\r\n\r\nconst fecthChainSuccess = (payload) => ({ type: FECHT_CHAIN, payload });\r\nconst fetchPending = () => ({ type: FETCH_PENDING });\r\nconst fecthEvolutionSuccess = (payload) => ({ type: FECHT_EVOLUTION, payload });\r\n\r\nconst fetchPokemonsPending = () => ({ type: FETCH_POKEMONS_PENDING });\r\nconst fetchPokemonsSuccess = (payload) => ({\r\n  type: FETCH_POKEMONS_SUCCESS,\r\n  payload,\r\n});\r\nconst fetchPokemonsError = (error) => ({ type: FETCH_POKEMONS_ERROR, error });\r\nconst fetchSelectPokemonSuccess = (payload) => ({\r\n  type: FETCH_SELECT_POKEMON_SUCCESS,\r\n  payload,\r\n});\r\nconst fetchSelectPokemonError = (error) => ({\r\n  type: FETCH_SELECT_POKEMON_ERROR,\r\n  error,\r\n});\r\nconst fetchSelectPokemonPending = () => ({\r\n  type: FETCH_SELECT_POKEMON_PENDING,\r\n});\r\n\r\nexport const fecthPokemons = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchPokemonsPending());\r\n    const data = await fetch(\r\n      `${process.env.REACT_APP_BASE_API_URL}/pokemon/?offset=0&limit=10`,\r\n    ).then((response) => response.json());\r\n    dispatch(fetchPokemonsSuccess(data.results));\r\n  } catch (e) {\r\n    dispatch(fetchPokemonsError(e));\r\n  }\r\n};\r\n\r\nexport const fecthPokemon = (name) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchPending());\r\n    const data = await fetch(\r\n      `https://pokeapi.co/api/v2/pokemon/${name}/`,\r\n    ).then((response) => response.json());\r\n    dispatch(fetchSelectPokemonSuccess(data));\r\n  } catch (e) {\r\n    dispatch(fetchSelectPokemonError(e));\r\n  }\r\n};\r\n\r\nexport const fecthSpecies = (name) =>\r\n// eslint-disable-next-line implicit-arrow-linebreak\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(fetchSelectPokemonPending());\r\n      const data = await fetch(\r\n        `https://pokeapi.co/api/v2/pokemon-species/${name}/`,\r\n      ).then((response) => response.json());\r\n      const { evolution_chain, habitat } = data;\r\n      dispatch(fecthChainSuccess({ name, evolution_chain, habitat }));\r\n    } catch (e) {\r\n      dispatch(fetchSelectPokemonError(e));\r\n    }\r\n  };\r\nexport const fecthEvolution = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchSelectPokemonPending());\r\n    const data = await fetch(\r\n      `https://pokeapi.co/api/v2/evolution-chain/${id}/`,\r\n    ).then((response) => response.json());\r\n    dispatch(fecthEvolutionSuccess(data));\r\n  } catch (e) {\r\n    dispatch(fetchSelectPokemonError(e));\r\n  }\r\n};\r\nexport const findPokemon = (text) => (dispatch) => {\r\n  dispatch(searchPokemon(text));\r\n};\r\n"],"sourceRoot":""}